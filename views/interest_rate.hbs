<h1 class="mt-5 text-primary-emphasis text-center fw-bold mb-5">Thay đổi lãi suất</h1>
<form action="/rules/interest_update" method="post" name="interest" id="interest">
    <div class="d-flex justify-content-around m-auto">
        <div class="card w-75 rounded">
            <div class="card-body">
                <div class="container p-3 rounded text-start">
                    <div class="row mt-2">
                        <h3 class="col fw-bold">Loại kỳ hạn</h3>
                        <h3 class="col fw-bold">Lãi suất ban đầu</h3>
                        <h3 class="col fw-bold">Lãi suất thay đổi</h3>
                    </div>
                    <span class="w-100 bg-dark" style="height: 2px; display: block; content: "";"></span>
                    {{#each data}}
                        <div class="form-group row mt-3">
                            <input type="hidden" name="ID_{{@index}}" value="{{@index}}">
                            <label for="interest{{@index}}" class="col fs-4">{{this.MoTa}}</label>
                            <div class="col fs-5 ">{{this.LaiSuat}}%</div>
                            <input class="col w-100 fs-5 text-start" type="text" name="interest_{{@index}}" placeholder="# Bỏ trống nếu không cần nhập">
                        </div>
                    {{/each}}
                </div>
            </div>
        </div>
    </div>
    <div class="mt-5 d-flex justify-content-around w-75 m-auto">
        <button type="button" onclick="history.back();" class=" ps-5 pe-5 fw-bold fs-4 text-black btn btn-secondary">Trở về</button>
        <button type="button" id="interest-submit" class="ps-5 pe-5 fw-bold fs-4 text-black btn btn-success">Xác nhận</button>
    </div>
</form>

{{> notification}}

<script>
    async function postFormDataAsJson({ url, formData }) {
        const plainFormData = Object.fromEntries(formData.entries());
        const formDataJsonString = JSON.stringify(plainFormData);

        const fetchOptions = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
            },
            body: formDataJsonString,
        };

        const response = await fetch(url, fetchOptions);

        if (!response.ok) {
            const errorMessage = await response.text();
            throw new Error(errorMessage);
        }

        return response.json();
    }

    async function handleFormSubmit(event) {        
        event.preventDefault();
        const form = event.currentTarget;
        const url = form.action;

        try {
            const formData = new FormData(form);
            const responseData = await postFormDataAsJson({ url, formData });
            return responseData;
        }
        catch (error) {
            console.error(error);
        }
    }    

    $("#interest").on("submit", async (e) => {
        try {        
            const responseData = await handleFormSubmit(e);    
            $('#notificationTextbox').val(responseData.noti)
            $('#myModal').css('display', '');
        }
        catch (error) {
            $('#notificationTextbox').val(error)
            $('#myModal').css('display', '');
        }        
    });    
    $('#closeModal').click(function () {
        $('#myModal').css('display', 'none');
        window.location.reload();
    });
    
    $("#interest-submit").on("click", () => {
        console.log(1);
        $("#interest").trigger('submit');
    })
</script>